// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network.implementation;

import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.network.fluent.VpnServerConfigurationsAssociatedWithVirtualWansClient;
import com.azure.resourcemanager.network.fluent.models.VpnServerConfigurationsResponseInner;
import com.azure.resourcemanager.network.models.VpnServerConfigurationsAssociatedWithVirtualWans;
import com.azure.resourcemanager.network.models.VpnServerConfigurationsResponse;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class VpnServerConfigurationsAssociatedWithVirtualWansImpl
    implements VpnServerConfigurationsAssociatedWithVirtualWans {
    @JsonIgnore
    private final ClientLogger logger = new ClientLogger(VpnServerConfigurationsAssociatedWithVirtualWansImpl.class);

    private final VpnServerConfigurationsAssociatedWithVirtualWansClient innerClient;

    private final com.azure.resourcemanager.network.NetworkManager serviceManager;

    public VpnServerConfigurationsAssociatedWithVirtualWansImpl(
        VpnServerConfigurationsAssociatedWithVirtualWansClient innerClient,
        com.azure.resourcemanager.network.NetworkManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public VpnServerConfigurationsResponse list(String resourceGroupName, String virtualWanName) {
        VpnServerConfigurationsResponseInner inner = this.serviceClient().list(resourceGroupName, virtualWanName);
        if (inner != null) {
            return new VpnServerConfigurationsResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public VpnServerConfigurationsResponse list(String resourceGroupName, String virtualWanName, Context context) {
        VpnServerConfigurationsResponseInner inner =
            this.serviceClient().list(resourceGroupName, virtualWanName, context);
        if (inner != null) {
            return new VpnServerConfigurationsResponseImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private VpnServerConfigurationsAssociatedWithVirtualWansClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.network.NetworkManager manager() {
        return this.serviceManager;
    }
}
