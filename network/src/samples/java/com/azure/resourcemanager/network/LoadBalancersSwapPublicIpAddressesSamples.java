// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.network;

import com.azure.core.management.SubResource;
import com.azure.core.util.Context;
import com.azure.resourcemanager.network.models.LoadBalancerVipSwapRequest;
import com.azure.resourcemanager.network.models.LoadBalancerVipSwapRequestFrontendIpConfiguration;
import java.util.Arrays;

/** Samples for LoadBalancers SwapPublicIpAddresses. */
public final class LoadBalancersSwapPublicIpAddressesSamples {
    /**
     * Sample code: Swap VIPs between two load balancers.
     *
     * @param networkManager Entry point to NetworkManager. Network Client.
     */
    public static void swapVIPsBetweenTwoLoadBalancers(
        com.azure.resourcemanager.network.NetworkManager networkManager) {
        networkManager
            .loadBalancers()
            .swapPublicIpAddresses(
                "westus",
                new LoadBalancerVipSwapRequest()
                    .withFrontendIpConfigurations(
                        Arrays
                            .asList(
                                new LoadBalancerVipSwapRequestFrontendIpConfiguration()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/loadBalancers/lb1/frontendIPConfigurations/lbfe1")
                                    .withPublicIpAddress(
                                        new SubResource()
                                            .withId(
                                                "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/publicIPAddresses/pip2")),
                                new LoadBalancerVipSwapRequestFrontendIpConfiguration()
                                    .withId(
                                        "/subscriptions/subid/resourceGroups/rg2/providers/Microsoft.Network/loadBalancers/lb2/frontendIPConfigurations/lbfe2")
                                    .withPublicIpAddress(
                                        new SubResource()
                                            .withId(
                                                "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/pip1")))),
                Context.NONE);
    }
}
