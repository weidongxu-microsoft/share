// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute;

import com.azure.resourcemanager.compute.models.CreationData;
import com.azure.resourcemanager.compute.models.DiskCreateOption;
import com.azure.resourcemanager.compute.models.DiskSecurityProfile;
import com.azure.resourcemanager.compute.models.DiskSecurityTypes;
import com.azure.resourcemanager.compute.models.DiskSku;
import com.azure.resourcemanager.compute.models.DiskStorageAccountTypes;
import com.azure.resourcemanager.compute.models.Encryption;
import com.azure.resourcemanager.compute.models.ExtendedLocation;
import com.azure.resourcemanager.compute.models.ExtendedLocationTypes;
import com.azure.resourcemanager.compute.models.ImageDiskReference;
import com.azure.resourcemanager.compute.models.NetworkAccessPolicy;
import com.azure.resourcemanager.compute.models.OperatingSystemTypes;

/** Samples for Disks CreateOrUpdate. */
public final class DisksCreateOrUpdateSamples {
    /**
     * Sample code: Create a managed disk by importing an unmanaged blob from a different subscription.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskByImportingAnUnmanagedBlobFromADifferentSubscription(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(
                new CreationData()
                    .withCreateOption(DiskCreateOption.IMPORT)
                    .withStorageAccountId(
                        "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Storage/storageAccounts/myStorageAccount")
                    .withSourceUri("https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd"))
            .create();
    }

    /**
     * Sample code: Create a managed disk and associate with disk access resource.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskAndAssociateWithDiskAccessResource(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(new CreationData().withCreateOption(DiskCreateOption.EMPTY))
            .withDiskSizeGB(200)
            .withNetworkAccessPolicy(NetworkAccessPolicy.ALLOW_PRIVATE)
            .withDiskAccessId(
                "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskAccesses/{existing-diskAccess-name}")
            .create();
    }

    /**
     * Sample code: Create a managed disk and associate with disk encryption set.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskAndAssociateWithDiskEncryptionSet(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(new CreationData().withCreateOption(DiskCreateOption.EMPTY))
            .withDiskSizeGB(200)
            .withEncryption(
                new Encryption()
                    .withDiskEncryptionSetId(
                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/diskEncryptionSets/{existing-diskEncryptionSet-name}"))
            .create();
    }

    /**
     * Sample code: Create a managed disk from an existing managed disk in the same or different subscription.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskFromAnExistingManagedDiskInTheSameOrDifferentSubscription(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk2")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(
                new CreationData()
                    .withCreateOption(DiskCreateOption.COPY)
                    .withSourceResourceId(
                        "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/disks/myDisk1"))
            .create();
    }

    /**
     * Sample code: Create a managed disk with security profile.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskWithSecurityProfile(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("North Central US")
            .withExistingResourceGroup("myResourceGroup")
            .withOsType(OperatingSystemTypes.WINDOWS)
            .withCreationData(
                new CreationData()
                    .withCreateOption(DiskCreateOption.FROM_IMAGE)
                    .withImageReference(
                        new ImageDiskReference()
                            .withId(
                                "/Subscriptions/{subscriptionId}/Providers/Microsoft.Compute/Locations/uswest/Publishers/Microsoft/ArtifactTypes/VMImage/Offers/{offer}")))
            .withSecurityProfile(new DiskSecurityProfile().withSecurityType(DiskSecurityTypes.TRUSTED_LAUNCH))
            .create();
    }

    /**
     * Sample code: Create an ultra managed disk with logicalSectorSize 512E.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAnUltraManagedDiskWithLogicalSectorSize512E(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new DiskSku().withName(DiskStorageAccountTypes.ULTRA_SSD_LRS))
            .withCreationData(new CreationData().withCreateOption(DiskCreateOption.EMPTY).withLogicalSectorSize(512))
            .withDiskSizeGB(200)
            .create();
    }

    /**
     * Sample code: Create a managed disk from a platform image.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskFromAPlatformImage(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withOsType(OperatingSystemTypes.WINDOWS)
            .withCreationData(
                new CreationData()
                    .withCreateOption(DiskCreateOption.FROM_IMAGE)
                    .withImageReference(
                        new ImageDiskReference()
                            .withId(
                                "/Subscriptions/{subscriptionId}/Providers/Microsoft.Compute/Locations/westus/Publishers/{publisher}/ArtifactTypes/VMImage/Offers/{offer}/Skus/{sku}/Versions/1.0.0")))
            .create();
    }

    /**
     * Sample code: Create an empty managed disk.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAnEmptyManagedDisk(com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(new CreationData().withCreateOption(DiskCreateOption.EMPTY))
            .withDiskSizeGB(200)
            .create();
    }

    /**
     * Sample code: Create a managed disk by importing an unmanaged blob from the same subscription.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskByImportingAnUnmanagedBlobFromTheSameSubscription(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(
                new CreationData()
                    .withCreateOption(DiskCreateOption.IMPORT)
                    .withSourceUri("https://mystorageaccount.blob.core.windows.net/osimages/osimage.vhd"))
            .create();
    }

    /**
     * Sample code: Create a managed disk by copying a snapshot.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskByCopyingASnapshot(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(
                new CreationData()
                    .withCreateOption(DiskCreateOption.COPY)
                    .withSourceResourceId(
                        "subscriptions/{subscriptionId}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/snapshots/mySnapshot"))
            .create();
    }

    /**
     * Sample code: Create a managed disk with ssd zrs account type.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedDiskWithSsdZrsAccountType(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withSku(new DiskSku().withName(DiskStorageAccountTypes.PREMIUM_ZRS))
            .withCreationData(new CreationData().withCreateOption(DiskCreateOption.EMPTY))
            .withDiskSizeGB(200)
            .create();
    }

    /**
     * Sample code: Create an empty managed disk in extended location.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAnEmptyManagedDiskInExtendedLocation(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withExtendedLocation(
                new ExtendedLocation().withName("{edge-zone-id}").withType(ExtendedLocationTypes.EDGE_ZONE))
            .withCreationData(new CreationData().withCreateOption(DiskCreateOption.EMPTY))
            .withDiskSizeGB(200)
            .create();
    }

    /**
     * Sample code: Create a managed upload disk.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createAManagedUploadDisk(com.azure.resourcemanager.compute.ComputeManager computeManager) {
        computeManager
            .disks()
            .define("myDisk")
            .withRegion("West US")
            .withExistingResourceGroup("myResourceGroup")
            .withCreationData(
                new CreationData().withCreateOption(DiskCreateOption.UPLOAD).withUploadSizeBytes(10737418752L))
            .create();
    }
}
