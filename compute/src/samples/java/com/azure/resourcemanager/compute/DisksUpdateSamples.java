// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute;

import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.models.Disk;
import com.azure.resourcemanager.compute.models.NetworkAccessPolicy;
import com.azure.resourcemanager.compute.models.PurchasePlanAutoGenerated;

/** Samples for Disks Update. */
public final class DisksUpdateSamples {
    /**
     * Sample code: Update a managed disk to disable bursting.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void updateAManagedDiskToDisableBursting(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        Disk resource =
            computeManager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withBurstingEnabled(false).apply();
    }

    /**
     * Sample code: Update a managed disk to add purchase plan.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void updateAManagedDiskToAddPurchasePlan(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        Disk resource =
            computeManager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource
            .update()
            .withPurchasePlan(
                new PurchasePlanAutoGenerated()
                    .withName("myPurchasePlanName")
                    .withPublisher("myPurchasePlanPublisher")
                    .withProduct("myPurchasePlanProduct")
                    .withPromotionCode("myPurchasePlanPromotionCode"))
            .apply();
    }

    /**
     * Sample code: Update a managed disk to change tier.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void updateAManagedDiskToChangeTier(com.azure.resourcemanager.compute.ComputeManager computeManager) {
        Disk resource =
            computeManager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withTier("P30").apply();
    }

    /**
     * Sample code: Create or update a bursting enabled managed disk.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void createOrUpdateABurstingEnabledManagedDisk(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        Disk resource =
            computeManager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withDiskSizeGB(1024).withBurstingEnabled(true).apply();
    }

    /**
     * Sample code: Update a managed disk to add supportsHibernation.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void updateAManagedDiskToAddSupportsHibernation(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        Disk resource =
            computeManager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withSupportsHibernation(true).apply();
    }

    /**
     * Sample code: Update managed disk to remove disk access resource association.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void updateManagedDiskToRemoveDiskAccessResourceAssociation(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        Disk resource =
            computeManager.disks().getByResourceGroupWithResponse("myResourceGroup", "myDisk", Context.NONE).getValue();
        resource.update().withNetworkAccessPolicy(NetworkAccessPolicy.ALLOW_ALL).apply();
    }
}
