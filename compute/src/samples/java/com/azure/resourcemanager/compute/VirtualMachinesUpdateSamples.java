// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.compute;

import com.azure.core.util.Context;
import com.azure.resourcemanager.compute.models.CachingTypes;
import com.azure.resourcemanager.compute.models.DataDisk;
import com.azure.resourcemanager.compute.models.DiskCreateOptionTypes;
import com.azure.resourcemanager.compute.models.DiskDetachOptionTypes;
import com.azure.resourcemanager.compute.models.HardwareProfile;
import com.azure.resourcemanager.compute.models.ImageReference;
import com.azure.resourcemanager.compute.models.ManagedDiskParameters;
import com.azure.resourcemanager.compute.models.NetworkInterfaceReference;
import com.azure.resourcemanager.compute.models.NetworkProfile;
import com.azure.resourcemanager.compute.models.OSDisk;
import com.azure.resourcemanager.compute.models.OSProfile;
import com.azure.resourcemanager.compute.models.StorageAccountTypes;
import com.azure.resourcemanager.compute.models.StorageProfile;
import com.azure.resourcemanager.compute.models.VirtualMachine;
import com.azure.resourcemanager.compute.models.VirtualMachineSizeTypes;
import java.util.Arrays;

/** Samples for VirtualMachines Update. */
public final class VirtualMachinesUpdateSamples {
    /**
     * Sample code: Update a VM by detaching data disk.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void updateAVMByDetachingDataDisk(com.azure.resourcemanager.compute.ComputeManager computeManager) {
        VirtualMachine resource =
            computeManager
                .virtualMachines()
                .getByResourceGroupWithResponse("myResourceGroup", "myVM", null, Context.NONE)
                .getValue();
        resource
            .update()
            .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2_V2))
            .withStorageProfile(
                new StorageProfile()
                    .withImageReference(
                        new ImageReference()
                            .withPublisher("MicrosoftWindowsServer")
                            .withOffer("WindowsServer")
                            .withSku("2016-Datacenter")
                            .withVersion("latest"))
                    .withOsDisk(
                        new OSDisk()
                            .withName("myVMosdisk")
                            .withCaching(CachingTypes.READ_WRITE)
                            .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                            .withManagedDisk(
                                new ManagedDiskParameters().withStorageAccountType(StorageAccountTypes.STANDARD_LRS)))
                    .withDataDisks(
                        Arrays
                            .asList(
                                new DataDisk()
                                    .withLun(0)
                                    .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                    .withDiskSizeGB(1023)
                                    .withToBeDetached(true),
                                new DataDisk()
                                    .withLun(1)
                                    .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                    .withDiskSizeGB(1023)
                                    .withToBeDetached(false))))
            .withOsProfile(
                new OSProfile()
                    .withComputerName("myVM")
                    .withAdminUsername("{your-username}")
                    .withAdminPassword("{your-password}"))
            .withNetworkProfile(
                new NetworkProfile()
                    .withNetworkInterfaces(
                        Arrays
                            .asList(
                                new NetworkInterfaceReference()
                                    .withId(
                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                    .withPrimary(true))))
            .apply();
    }

    /**
     * Sample code: Update a VM by force-detaching data disk.
     *
     * @param computeManager Entry point to ComputeManager. Compute Client.
     */
    public static void updateAVMByForceDetachingDataDisk(
        com.azure.resourcemanager.compute.ComputeManager computeManager) {
        VirtualMachine resource =
            computeManager
                .virtualMachines()
                .getByResourceGroupWithResponse("myResourceGroup", "myVM", null, Context.NONE)
                .getValue();
        resource
            .update()
            .withHardwareProfile(new HardwareProfile().withVmSize(VirtualMachineSizeTypes.STANDARD_D2_V2))
            .withStorageProfile(
                new StorageProfile()
                    .withImageReference(
                        new ImageReference()
                            .withPublisher("MicrosoftWindowsServer")
                            .withOffer("WindowsServer")
                            .withSku("2016-Datacenter")
                            .withVersion("latest"))
                    .withOsDisk(
                        new OSDisk()
                            .withName("myVMosdisk")
                            .withCaching(CachingTypes.READ_WRITE)
                            .withCreateOption(DiskCreateOptionTypes.FROM_IMAGE)
                            .withManagedDisk(
                                new ManagedDiskParameters().withStorageAccountType(StorageAccountTypes.STANDARD_LRS)))
                    .withDataDisks(
                        Arrays
                            .asList(
                                new DataDisk()
                                    .withLun(0)
                                    .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                    .withDiskSizeGB(1023)
                                    .withToBeDetached(true)
                                    .withDetachOption(DiskDetachOptionTypes.FORCE_DETACH),
                                new DataDisk()
                                    .withLun(1)
                                    .withCreateOption(DiskCreateOptionTypes.EMPTY)
                                    .withDiskSizeGB(1023)
                                    .withToBeDetached(false))))
            .withOsProfile(
                new OSProfile()
                    .withComputerName("myVM")
                    .withAdminUsername("{your-username}")
                    .withAdminPassword("{your-password}"))
            .withNetworkProfile(
                new NetworkProfile()
                    .withNetworkInterfaces(
                        Arrays
                            .asList(
                                new NetworkInterfaceReference()
                                    .withId(
                                        "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/{existing-nic-name}")
                                    .withPrimary(true))))
            .apply();
    }
}
