// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policy.implementation;

import com.azure.core.util.Context;
import com.azure.resourcemanager.policy.fluent.models.PolicySetDefinitionInner;
import com.azure.resourcemanager.policy.models.ParameterDefinitionsValue;
import com.azure.resourcemanager.policy.models.PolicyDefinitionGroup;
import com.azure.resourcemanager.policy.models.PolicyDefinitionReference;
import com.azure.resourcemanager.policy.models.PolicySetDefinition;
import com.azure.resourcemanager.policy.models.PolicyType;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class PolicySetDefinitionImpl
    implements PolicySetDefinition, PolicySetDefinition.Definition, PolicySetDefinition.Update {
    private PolicySetDefinitionInner innerObject;

    private final com.azure.resourcemanager.policy.PolicyManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public PolicyType policyType() {
        return this.innerModel().policyType();
    }

    public String displayName() {
        return this.innerModel().displayName();
    }

    public String description() {
        return this.innerModel().description();
    }

    public Object metadata() {
        return this.innerModel().metadata();
    }

    public Map<String, ParameterDefinitionsValue> parameters() {
        Map<String, ParameterDefinitionsValue> inner = this.innerModel().parameters();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public List<PolicyDefinitionReference> policyDefinitions() {
        List<PolicyDefinitionReference> inner = this.innerModel().policyDefinitions();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<PolicyDefinitionGroup> policyDefinitionGroups() {
        List<PolicyDefinitionGroup> inner = this.innerModel().policyDefinitionGroups();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public PolicySetDefinitionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.policy.PolicyManager manager() {
        return this.serviceManager;
    }

    private String policySetDefinitionName;

    public PolicySetDefinition create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicySetDefinitions()
                .createOrUpdateWithResponse(policySetDefinitionName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public PolicySetDefinition create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicySetDefinitions()
                .createOrUpdateWithResponse(policySetDefinitionName, this.innerModel(), context)
                .getValue();
        return this;
    }

    PolicySetDefinitionImpl(String name, com.azure.resourcemanager.policy.PolicyManager serviceManager) {
        this.innerObject = new PolicySetDefinitionInner();
        this.serviceManager = serviceManager;
        this.policySetDefinitionName = name;
    }

    public PolicySetDefinitionImpl update() {
        return this;
    }

    public PolicySetDefinition apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicySetDefinitions()
                .createOrUpdateWithResponse(policySetDefinitionName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public PolicySetDefinition apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicySetDefinitions()
                .createOrUpdateWithResponse(policySetDefinitionName, this.innerModel(), context)
                .getValue();
        return this;
    }

    PolicySetDefinitionImpl(
        PolicySetDefinitionInner innerObject, com.azure.resourcemanager.policy.PolicyManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.policySetDefinitionName = Utils.getValueFromIdByName(innerObject.id(), "policySetDefinitions");
    }

    public PolicySetDefinition refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicySetDefinitions()
                .getWithResponse(policySetDefinitionName, Context.NONE)
                .getValue();
        return this;
    }

    public PolicySetDefinition refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getPolicySetDefinitions()
                .getWithResponse(policySetDefinitionName, context)
                .getValue();
        return this;
    }

    public PolicySetDefinitionImpl withPolicyType(PolicyType policyType) {
        this.innerModel().withPolicyType(policyType);
        return this;
    }

    public PolicySetDefinitionImpl withDisplayName(String displayName) {
        this.innerModel().withDisplayName(displayName);
        return this;
    }

    public PolicySetDefinitionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public PolicySetDefinitionImpl withMetadata(Object metadata) {
        this.innerModel().withMetadata(metadata);
        return this;
    }

    public PolicySetDefinitionImpl withParameters(Map<String, ParameterDefinitionsValue> parameters) {
        this.innerModel().withParameters(parameters);
        return this;
    }

    public PolicySetDefinitionImpl withPolicyDefinitions(List<PolicyDefinitionReference> policyDefinitions) {
        this.innerModel().withPolicyDefinitions(policyDefinitions);
        return this;
    }

    public PolicySetDefinitionImpl withPolicyDefinitionGroups(List<PolicyDefinitionGroup> policyDefinitionGroups) {
        this.innerModel().withPolicyDefinitionGroups(policyDefinitionGroups);
        return this;
    }
}
