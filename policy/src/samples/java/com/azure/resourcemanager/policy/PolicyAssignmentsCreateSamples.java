// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.policy;

import com.azure.core.management.serializer.SerializerFactory;
import com.azure.core.util.serializer.SerializerEncoding;
import com.azure.resourcemanager.policy.models.EnforcementMode;
import com.azure.resourcemanager.policy.models.Identity;
import com.azure.resourcemanager.policy.models.NonComplianceMessage;
import com.azure.resourcemanager.policy.models.ParameterValuesValue;
import com.azure.resourcemanager.policy.models.ResourceIdentityType;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for PolicyAssignments Create. */
public final class PolicyAssignmentsCreateSamples {
    /**
     * Sample code: Create or update a policy assignment.
     *
     * @param policyManager Entry point to PolicyManager. To manage and control access to your resources, you can define
     *     customized policies and assign them at a scope.
     */
    public static void createOrUpdateAPolicyAssignment(com.azure.resourcemanager.policy.PolicyManager policyManager)
        throws IOException {
        policyManager
            .policyAssignments()
            .define("EnforceNaming")
            .withExistingScope("subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2")
            .withDisplayName("Enforce resource naming rules")
            .withPolicyDefinitionId(
                "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming")
            .withParameters(
                mapOf(
                    "prefix",
                    new ParameterValuesValue()
                        .withValue(
                            SerializerFactory
                                .createDefaultManagementSerializerAdapter()
                                .deserialize("\"DeptA\"", Object.class, SerializerEncoding.JSON)),
                    "suffix",
                    new ParameterValuesValue()
                        .withValue(
                            SerializerFactory
                                .createDefaultManagementSerializerAdapter()
                                .deserialize("\"-LC\"", Object.class, SerializerEncoding.JSON))))
            .withDescription("Force resource names to begin with given DeptA and end with -LC")
            .withMetadata(
                SerializerFactory
                    .createDefaultManagementSerializerAdapter()
                    .deserialize("{\"assignedBy\":\"Special Someone\"}", Object.class, SerializerEncoding.JSON))
            .withNonComplianceMessages(
                Arrays
                    .asList(
                        new NonComplianceMessage()
                            .withMessage("Resource names must start with 'DeptA' and end with '-LC'.")))
            .create();
    }

    /**
     * Sample code: Create or update a policy assignment with multiple non-compliance messages.
     *
     * @param policyManager Entry point to PolicyManager. To manage and control access to your resources, you can define
     *     customized policies and assign them at a scope.
     */
    public static void createOrUpdateAPolicyAssignmentWithMultipleNonComplianceMessages(
        com.azure.resourcemanager.policy.PolicyManager policyManager) {
        policyManager
            .policyAssignments()
            .define("securityInitAssignment")
            .withExistingScope("subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2")
            .withDisplayName("Enforce security policies")
            .withPolicyDefinitionId(
                "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policySetDefinitions/securityInitiative")
            .withNonComplianceMessages(
                Arrays
                    .asList(
                        new NonComplianceMessage()
                            .withMessage(
                                "Resources must comply with all internal security policies. See <internal site URL>"
                                    + " for more info."),
                        new NonComplianceMessage()
                            .withMessage("Resource names must start with 'DeptA' and end with '-LC'.")
                            .withPolicyDefinitionReferenceId("10420126870854049575"),
                        new NonComplianceMessage()
                            .withMessage("Storage accounts must have firewall rules configured.")
                            .withPolicyDefinitionReferenceId("8572513655450389710")))
            .create();
    }

    /**
     * Sample code: Create or update a policy assignment without enforcing policy effect during resource creation or
     * update.
     *
     * @param policyManager Entry point to PolicyManager. To manage and control access to your resources, you can define
     *     customized policies and assign them at a scope.
     */
    public static void createOrUpdateAPolicyAssignmentWithoutEnforcingPolicyEffectDuringResourceCreationOrUpdate(
        com.azure.resourcemanager.policy.PolicyManager policyManager) throws IOException {
        policyManager
            .policyAssignments()
            .define("EnforceNaming")
            .withExistingScope("subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2")
            .withDisplayName("Enforce resource naming rules")
            .withPolicyDefinitionId(
                "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming")
            .withParameters(
                mapOf(
                    "prefix",
                    new ParameterValuesValue()
                        .withValue(
                            SerializerFactory
                                .createDefaultManagementSerializerAdapter()
                                .deserialize("\"DeptA\"", Object.class, SerializerEncoding.JSON)),
                    "suffix",
                    new ParameterValuesValue()
                        .withValue(
                            SerializerFactory
                                .createDefaultManagementSerializerAdapter()
                                .deserialize("\"-LC\"", Object.class, SerializerEncoding.JSON))))
            .withDescription("Force resource names to begin with given DeptA and end with -LC")
            .withMetadata(
                SerializerFactory
                    .createDefaultManagementSerializerAdapter()
                    .deserialize("{\"assignedBy\":\"Special Someone\"}", Object.class, SerializerEncoding.JSON))
            .withEnforcementMode(EnforcementMode.DO_NOT_ENFORCE)
            .create();
    }

    /**
     * Sample code: Create or update a policy assignment with a managed identity.
     *
     * @param policyManager Entry point to PolicyManager. To manage and control access to your resources, you can define
     *     customized policies and assign them at a scope.
     */
    public static void createOrUpdateAPolicyAssignmentWithAManagedIdentity(
        com.azure.resourcemanager.policy.PolicyManager policyManager) throws IOException {
        policyManager
            .policyAssignments()
            .define("EnforceNaming")
            .withExistingScope("subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2")
            .withRegion("eastus")
            .withIdentity(new Identity().withType(ResourceIdentityType.SYSTEM_ASSIGNED))
            .withDisplayName("Enforce resource naming rules")
            .withPolicyDefinitionId(
                "/subscriptions/ae640e6b-ba3e-4256-9d62-2993eecfa6f2/providers/Microsoft.Authorization/policyDefinitions/ResourceNaming")
            .withParameters(
                mapOf(
                    "prefix",
                    new ParameterValuesValue()
                        .withValue(
                            SerializerFactory
                                .createDefaultManagementSerializerAdapter()
                                .deserialize("\"DeptA\"", Object.class, SerializerEncoding.JSON)),
                    "suffix",
                    new ParameterValuesValue()
                        .withValue(
                            SerializerFactory
                                .createDefaultManagementSerializerAdapter()
                                .deserialize("\"-LC\"", Object.class, SerializerEncoding.JSON))))
            .withDescription("Force resource names to begin with given DeptA and end with -LC")
            .withMetadata(
                SerializerFactory
                    .createDefaultManagementSerializerAdapter()
                    .deserialize("{\"assignedBy\":\"Foo Bar\"}", Object.class, SerializerEncoding.JSON))
            .withEnforcementMode(EnforcementMode.DEFAULT)
            .create();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
